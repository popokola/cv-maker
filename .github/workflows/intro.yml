name: Intro to Github Action

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches: [ main, feature/actions]
  pull_request:
    branches: [ main ]

jobs:
    build-test-pnpm:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: pnpm/action-setup@v2.4.0
          with:
            version: latest
        - name: Get pnpm store directory
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        - uses: actions/cache@v3
          name: Setup pnpm cache
          with:
            path: ${{ env.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-store-
        - name: Install dependencies
          run: pnpm install
        - name: build
          run: pnpm run build
        - name: run the server
          run: |
            pnpm run preview & 
            sleep 5
        - name: Curl the server
          run: curl -I http://localhost:4173
        - name: Create Snapshot
          run: |
            mkdir -m 777 gen
            docker run -i --init --cap-add=SYS_ADMIN --network host -v ./gen:/home/pptruser/gen ghcr.io/puppeteer/puppeteer:latest node -e "$(cat snapshot.js)" http://localhost:4173 ./gen
        - name: Move the snapshot
          run: |
            mv gen/* static/
            git config --global user.email "charles258@hotmail.fr"
            git config --global user.name "Charles"
            git add static/
            git commit -m "Update snapshot"
            git push

       
    deploy-to-vercel:
      runs-on: ubuntu-latest
      needs: build-test-pnpm
      steps:
        - uses: actions/checkout@v3.5.3
          with:
            ref: 'main'
  
        - name: Setup pnpm
          uses: pnpm/action-setup@v2.4.0
          with:
            run_install: false
            version: 8
  
        - name: Get pnpm store directory
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
  
        - uses: actions/cache@v3
          name: Setup pnpm cache
          with:
            path: ${{ env.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-store-
  
        - name: Install Vercel CLI
          run: pnpm install --global vercel@latest
  
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

           
        